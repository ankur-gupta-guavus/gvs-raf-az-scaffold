{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "The name of the HDInsight cluster to create."
      }
    },
    "clusterLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "sshUserName": {
      "type": "string",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },
    "sshPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },    
    "defaultStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The short name of the default Azure storage account name. This account needs to be secure transfer enabled."
      }
    },
    "defaultStorageAccountKey": {
      "type": "string",
      "metadata": {
        "description": "The key of the default storage account."
      }
    },
    "defaultContainerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing Azure blob storage container."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "workerNodeSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2"
      ],
      "metadata": {
        "description": "Size of WorkerNodes."
      }
    },
    "workerCount": {
      "type": "Int",
      "defaultValue": 3,
      "minValue": 3,
      "metadata": {
        "description": "Number of workerNodes."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of virtual Network."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of subnet in above virtual Network."
      }
    }
  },
  "variables": {
    "clusterType": "hbase",
    "clusterVersion": "3.6",
    "clusterLoginUserName": "admin",
    "headNodeSize": "Standard_D3_v2",
    "zkNodeSize": "Standard_D3_v2",
    "edgeNodeSize": "Standard_D3_v2",
    "applicationName": "Guavus-CDAP",
    "scriptActionUri1": "https://ankurhdistg.blob.core.windows.net/reflex/Cdap-install_v0.sh",
    "scriptActionUri2": "https://ankurhdistg.blob.core.windows.net/reflex/Cdap-install_v1.sh"
  },
  "resources": [
    {
      "type": "Microsoft.HDInsight/clusters",
      "name": "[parameters('clusterName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2015-03-01-preview",
      "dependsOn": [],
      "properties": {
        "clusterVersion": "[variables('clusterVersion')]",
        "osType": "Linux",
        "tier": "Standard",
        "clusterDefinition": {
          "kind": "[variables('clusterType')]",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[variables('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            },
            "hdfs-site": {
              "dfs.webhdfs.enabled": true
            },
            "core-site": {
              "fs.azure.page.blob.dir": "/hbase/WALs,/hbase/oldWALs,/mapreducestaging,/hbase/MasterProcWALs,/atshistory,/tezstaging,/ams/hbase,/cdap"
            },
            "zoo.cfg": {
              "maxClientCnxns": 0
            }  
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(parameters('defaultStorageAccountName'),'.blob.core.windows.net')]",
              "isDefault": true,
              "container": "[parameters('defaultContainerName')]",
              "key": "[parameters('defaultStorageAccountKey')]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "[variables('headNodeSize')]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
             "virtualNetworkProfile": {
                "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'))]",
                "subnet": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'),'/subnets/',parameters('subnetName'))]"
              }
            },
            {
              "name": "workernode",
              "minInstanceCount": "3",
              "targetInstanceCount": "[parameters('workerCount')]",
              "hardwareProfile": {
                "vmSize": "[parameters('workerNodeSize')]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
             "virtualNetworkProfile": {
                "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'))]",
                "subnet": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'),'/subnets/',parameters('subnetName'))]"
              }
            },
            {
              "name": "zookeepernode",
              "targetInstanceCount": 3,
              "hardwareProfile": {
                "vmSize": "[variables('zkNodeSize')]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
             "virtualNetworkProfile": {
                "id": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'))]",
                "subnet": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'),'/subnets/',parameters('subnetName'))]"
              }
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('clusterName'),'/', variables('applicationName'))]",
      "type": "Microsoft.HDInsight/clusters/applications",
      "apiVersion": "2015-03-01-preview",
      "dependsOn": [
        "[concat('Microsoft.HDInsight/clusters/',parameters('clusterName'))]"
      ],
      "properties": {
        "marketPlaceIdentifier": "EmptyNode",
        "computeProfile": {
          "roles": [
            {
              "name": "edgenode",
              "targetInstanceCount": 1,
              "hardwareProfile": {
                "vmSize": "[variables('edgeNodeSize')]"
              }
            }
          ]
        },
        "installScriptActions": [          
          {
            "name": "[concat('emptynode','-' ,uniquestring(variables('applicationName')),'-1')]",
            "uri": "[variables('scriptActionUri1')]",
            "roles": [
              "edgenode"
            ]
          },
          {
            "name": "[concat('emptynode','-' ,uniquestring(variables('applicationName')),'-2')]",
            "uri": "[variables('scriptActionUri2')]",
            "roles": [
              "edgenode"
            ]
          }          
        ],
        "uninstallScriptActions": [],
        "httpsEndpoints": [
            {
                "subDomainSuffix": "cdp",
                "destinationPort": 11011,
                "accessModes": ["WebPage"]
            }
        ],
        "applicationType": "CustomApplication"
      }
    }
  ],
  "outputs": {
    "cluster": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.HDInsight/clusters',parameters('clusterName')))]"
    },
    "application": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.HDInsight/clusters/applications/',parameters('clusterName'), variables('applicationName')))]"
    }
  }
}
